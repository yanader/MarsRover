Done
-) MVP achieved
-) README
-) Implement truncation of instructions
-) In command-centre - drop vehicle needs to ask for the type of vehicle to drop
-) On landing a new vehicle, check the space is empty
-) new vehicle type (with Diggable) interface (branch -Miner)


NEXT
implement activate vehicle.
    need to return a list of vehicles (either all or of the specified type)
    and chop them into an option set the user can choose from so we can activate it


CLEAN UP USER INTERFACE -- too much text

TODO
-) Plateau.getVehicles() - use this to allow the command-centre to
    offer an option for the user to pick a vehicle to control
-) CommandCentre to allow ui options to dig. (Might be straightforward - need to double check access modifiers)
-) CommandCentre.chooseOption()
    This will allow the user to choose between moving the active vehicle, swapping vehicles or landing another vehicle
-) remove vehicle
-) Interface Scannable with a class that can scan for resources
-) refactor logic around checking movement instructions/offering truncated instructions (too much repetition)
-) refactor everything
-) explore interface unit testing